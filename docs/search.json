[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Siyu Zou",
    "section": "",
    "text": "This is Siyu Zou’s website."
  },
  {
    "objectID": "index.html#self-introduction",
    "href": "index.html#self-introduction",
    "title": "Siyu Zou",
    "section": "Self Introduction",
    "text": "Self Introduction\nSiyu Zou is a first-year master student majoring in Epidemiology at Johns Hopkins University."
  },
  {
    "objectID": "index.html#research-interest",
    "href": "index.html#research-interest",
    "title": "Siyu Zou",
    "section": "Research interest",
    "text": "Research interest\nSiyu is interested in understanding the role of environmental factors in the prevention and control of cardiovascular diseases. \nSiyu is a research assisitant in Professor Kunihiro Matsushita’s team, focus on using Coronary Artery Calcium Score to predict the incidence risk of atherosclerotic cardiovascular diseases (ASCVD). \nTo learn more about Siyu Zou’s research output, visit her Research Gate"
  },
  {
    "objectID": "About.html",
    "href": "About.html",
    "title": "About me",
    "section": "",
    "text": "Education\nJohns Hopkins University | Baltimore, US  Master of Health Science | Aug 2023 - June 2025 \nPeking University | Beijing, China  Bachelor of Medicine | Sept 2017 - June 2022 \n\n\nResearch interest\n\nCardiovascular Disease (CVD) \nRisk prediction\nClinical Trial \nBehavioral intervention to control hypertension and risk of CVD. \nPrevention of stroke and cognitive decline, which might result from poorly controlled CVD risk factors. \n\n\n\nResearch Experience\n\nJohns Hopkins University | Research Assistant (Part-time) | Dec 2023 - Present \nTsinghua University | Research Assistant (Full-time) | July 2022 - Aug 2023 \nPeking University | Research Assistant (Part-time) | May 2018 - June 2022 \nDuke Kunshan University | Research Assistant (Part-time) | Jan 2021 - Dec 2021 \n\n\n\nSelect Publications\n\nZou S, Wang Z, Bhura M, et al. Prevalence and associated socioeconomic factors of multimorbidity in 10 regions of China: an analysis of 0.5 million adults. Journal of Public Health (Oxford). 2022;44(1). doi: 10.1093/pubmed/fdaa204\nZou S, Wang Z, Bhura M, et al. Association of multimorbidity of non-communicable diseases with mortality: a 10-year prospective study of 0.5 million Chinese adults. Public Health. 2022;205. doi: 10.1016/j.puhe.2022.01.021\nZou S, Wang Z, Tang K. Social inequalities in all-cause mortality among adults with multimorbidity: a 10-year prospective study of 0.5 million Chinese adults. International health. 2023;15(2):123-133. doi:10.1093/inthealth/ihac052\nZou X, Zou S, Guo Y, et al. Association of smoking status and nicotine dependence with multi-morbidity in China: A nationally representative cross-sectional study. Tobacco induced diseases. 2023;21:81. doi:10.18332/tid/166110\nYan LL, Li C, Zou S, et al. Healthy eating and all-cause mortality among Chinese aged 80 years or older. International Journal of Behavioral Nutrition and Physical Activity. 2022;19(1). doi: 10.1186/s12966-022-01280-6\nZou S, Qi X, Marshall K, et al. Understanding the context of healthcare utilisation for children under-five with diarrhoea in the DRC: based on Andersen behavioural model. BMC health services research. 2022;22(1). doi: 10.1186/s12913-022-07530-4\nZou S, Cao W, Jia Y, et al. Sexual and reproductive health and attitudes towards sex of young adults in China. BMJ sexual & reproductive health. 2022;48(e1). doi: 10.1136/bmjsrh-2020-200766\nHuang S, Zou S, Hee J, et al. Pregnancy loss and risk of cardiometabolic multimorbidity in Chinese women: the China Kadoorie Biobank study. 2023. doi: 10.21203/rs.3.rs-3140839/v1\nGao Y, Wang Y, Zou S, et al. Association of iron supplementation and deworming with early childhood development: analysis of Demographic and Health Surveys in ten low- and middle-income countries. European journal of nutrition. 2021;60(6). doi: 10.1007/s00394-021-02493-4\nGao Y, Zhang L, Kc A, et al. Housing environment and early childhood development in sub-Saharan Africa: A cross-sectional analysis. PLoS Medicine. 2021;18(4). doi: 10.1371/journal.pmed.1003578\n\n\n\nConference Proceedings\n\nTime-Varying Healthy Lifestyle Profile and All-Cause Mortality Among the Oldest-Old in China. Circulation. 2023;147. doi:10.1161/circ.147.suppl_1.p303 (Poster Presentation)\nPrevalence and associated socioeconomic factors of multimorbidity in ten regions of China: a cross-sectional analysis. The Lancet, 2020;396:S12. doi: 10.1016/S0140-6736(20)32432-6 (Poster Presentation)\nGlobal, and regional trends of dengue and its relationship with micronutrient deficiencies from 1990 to 2019: an analysis of the Global Burden of Disease 2019 study. 2nd World Health Forum towards Health Equity, 2022 (Oral Presentation)\n“Life changing benefits”: Delivering comprehensive sexuality education in Western China - a qualitative study. The 118th American Sociological Association (ASA) Annual Meeting, 2023 (Roundtables)\nAssociation between Chinese youth’s sources of sexual knowledge and sexual intercourse: a mediation analysis. The 118th ASA Annual Meeting, 2023 (Roundtables)"
  },
  {
    "objectID": "Dashboard.html",
    "href": "Dashboard.html",
    "title": "Dashboard",
    "section": "",
    "text": "This dashboard was created for two purposes: \n\nDo survival analysis based on the data frame of survivalists across all 9 seasons.  We would like to explore if males live longer than females? How many loadouts every survivalists has taken?\nTo practice building dashboards with flexdashboard and Shiny for the BSPH course Statistical Programming Paradigms and Workflows"
  },
  {
    "objectID": "Dashboard.html#purposes",
    "href": "Dashboard.html#purposes",
    "title": "Dashboard",
    "section": "",
    "text": "This dashboard was created for two purposes: \n\nDo survival analysis based on the data frame of survivalists across all 9 seasons.  We would like to explore if males live longer than females? How many loadouts every survivalists has taken?\nTo practice building dashboards with flexdashboard and Shiny for the BSPH course Statistical Programming Paradigms and Workflows"
  },
  {
    "objectID": "Dashboard.html#the-link",
    "href": "Dashboard.html#the-link",
    "title": "Dashboard",
    "section": "The Link",
    "text": "The Link\nThe dashboard is deployed using shinyapps.io\nAccess the the dashboard via this link: https://siyuzou.shinyapps.io/Example_analysis/\nSource code of the dashboard is stored in my GitHub repo"
  },
  {
    "objectID": "Dashboard.html#data-source",
    "href": "Dashboard.html#data-source",
    "title": "Dashboard",
    "section": "Data source",
    "text": "Data source\nData Source for this project \nThis data of the TV series Alone collected and shared on TidyTuesday , which is a weekly podcast and global community activity brought to you by the R4DS Online Learning Community. \nHere is a data dictionary for what all the column names mean: data dictionary"
  },
  {
    "objectID": "Project_1.html",
    "href": "Project_1.html",
    "title": "Example Analysis",
    "section": "",
    "text": "Based on the US Census Bureau’s data retrieved from APIs, - Estimate the death rate per 1000 residents in US 2021 - The household income distribution by different country in US\n\n\n\nData was downloaded by using tidycensus, an R package that allows users to interface with a select number of the US Census Bureau’s data APIs and return tidyverse-ready data frames.\n\n\n\n\n\nHere is a data dictionary for what all the column names mean:   data dictionary\n\n\n\n\n# tests if a directory named \"data\" exists locally\nif (!dir.exists(here(\"data\"))) {\n    dir.create(here(\"data\"))\n}\n\nif (!file.exists(here(\"data\", \"US_death.RDS\"))) {\n      US_death &lt;- get_estimates(geography = \"county\",\n                               variables = \"DEATHS\",\n                               year = 2021,\n                               geometry = TRUE,\n                               resolution = \"20m\") %&gt;%\n            shift_geometry()\n      # save the files to RDS objects\n      saveRDS(US_death, file = here(\"data\", \"US_death.RDS\"))\n      }\n\nif (!file.exists(here(\"data\", \"US_income.RDS\"))) {\n      US_income &lt;- get_acs(geography = \"county\", variables = \"B19013_001\", \n                            shift_geo = TRUE, geometry = TRUE)\n      saveRDS(US_income, file = here(\"data\", \"US_income.RDS\"))\n      }\n\nvars10 &lt;- c(\"P005003\", \"P005004\", \"P005006\", \"P004003\")\n\nif (!file.exists(here(\"data\", \"ethnic_il.RDS\"))) {\n     ethnic_il &lt;- get_decennial(geography = \"county\",  year = 2010,\n                    summary_var = \"P001001\", variables = vars10,  geometry = T)\n      saveRDS(ethnic_il, file = here(\"data\", \"ethnic_il.RDS\"))\n      }\n\n\n\n\n\n\nUS_death &lt;- readRDS(here(\"data\", \"US_death.RDS\"))\nUS_income &lt;- readRDS(here(\"data\", \"US_income.RDS\"))\nethnic_il &lt;- readRDS(here(\"data\", \"ethnic_il.RDS\"))\n\nsum_il &lt;- ethnic_il  |&gt;\n  separate(NAME, c(\"country\", \"state\"), sep = \",\") |&gt;\n  group_by(state, country) |&gt;\n  nest() |&gt;\n  mutate(\n    data = map(data, ~ {\n      .x$value &lt;- as.numeric(.x$value)\n      .x$summary_value &lt;- as.numeric(.x$summary_value)\n      .x$pct &lt;- 100 * (.x$value / .x$summary_value)\n      return(.x)\n    })\n  ) |&gt;\n  unnest(cols = c(data))\n\nsum_US_death &lt;- US_death |&gt;\n      separate(NAME, c(\"country\", \"state\"), sep = \",\" )  |&gt;\n      group_by(state) |&gt;\n      nest() |&gt;\n      mutate(\n         stats = map(.x = data, .f = ~tibble(\n            death_minimum = min(.x$value),\n            death_maximum = max(.x$value),\n            death_mean = mean(.x$value)\n        ))\n    )     |&gt;\n      select(-data)  |&gt;\n      unnest(stats)\n\n\n\n\norder = c(\"Q1:&lt;157\", \"Q2:157 to 361\", \"Q3:361 to 865\", \"Q4:865 and up\")\n\nUS_death &lt;- US_death %&gt;%\n  mutate(groups = case_when(\n    value &gt; 865 ~ \"Q4:865 and up\",\n    value &gt; 361 ~ \"Q3:361 to 865\",\n    value &gt; 157 ~ \"Q2:157 to 361\",\n    TRUE ~ \"Q1:&lt;157\"\n  )) %&gt;%\n  mutate(groups = factor(groups, levels = order))\n\nstate_overlay &lt;- states(\n  cb = TRUE,\n  resolution = \"20m\"\n) %&gt;%\n  filter(GEOID != \"72\") %&gt;%\n  shift_geometry()\n\nRetrieving data for the year 2021\n\n\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |======                                                                |   9%\n  |                                                                            \n  |============                                                          |  17%\n  |                                                                            \n  |==================                                                    |  26%\n  |                                                                            \n  |========================                                              |  35%\n  |                                                                            \n  |===============================                                       |  44%\n  |                                                                            \n  |=====================================                                 |  52%\n  |                                                                            \n  |===========================================                           |  61%\n  |                                                                            \n  |=================================================                     |  70%\n  |                                                                            \n  |=======================================================               |  79%\n  |                                                                            \n  |=============================================================         |  87%\n  |                                                                            \n  |======================================================================| 100%\n\nggplot() +\n  geom_sf(data = US_death, aes(fill = groups, color = groups), size = 0.1) +\n  geom_sf(data = state_overlay, fill = NA, color = \"black\", size = 0.1) +\n  scale_fill_brewer(palette = \"PuOr\", direction = -1) +\n  scale_color_brewer(palette = \"PuOr\", direction = -1, guide = FALSE) +\n  coord_sf(datum = NA) +\n  theme_minimal(base_family = \"Roboto\") +\n  labs(title = \"Death per 1000 residents by county\",\n       subtitle = \"US Census Bureau 2021 Population Estimates\",\n       fill = \"Rate\",\n       caption = \"Data acquired with the R tidycensus package | @Siyu Zou\")\n\n\n\n\n\n\n\nggplot(US_income) + \n  geom_sf(aes(fill = estimate), color = NA) + \n  coord_sf(datum = NA) + \n  theme_minimal() + \n  scale_fill_viridis_c() +\n       labs(title = \"Household income by county\",\n       subtitle = \"US Census Bureau 2021 Population Estimates\",\n       fill = \"Household income\",\n       caption = \"Data acquired with the R tidycensus package | @Siyu Zou\")\n\n\n\n\n\n\n\n\nsum_il %&gt;%\n      filter( value &gt; 1000 ) %&gt;%\n      mutate(race = case_when (variable == \"P005003\" ~ \"White\",\n                               variable == \"P005004\" ~ \"Black\",\n                               variable == \"P005006\" ~ \"Asian\",\n                               variable == \"P004003\" ~ \"Hispanic\")\n             ) %&gt;%\n      ggplot(aes(pct)) + \n            geom_histogram() +\n            facet_wrap(~race) +\n            labs(title = \"Mean death number by race in 2017-2021\",\n                  subtitle = \"2017-2021 American Community Survey\",\n                  y = \"Mean number of death\",\n                  x = \"Race\",\n                  caption = \"Siyu Zou\") +\n      theme_minimal() +\n      theme(\n            axis.text.x = element_text(angle = 45, hjust = 1, size = 6),\n            plot.title = element_text(size = 16, face = \"bold\",hjust = 0.5),\n            plot.subtitle = element_text(size = 11, face = \"italic\" ,hjust = 0.5)      \n      )\n\n\n\n\n\n\n\n\n\ndplyr:mutate, filter, group_by, select tidyr: separate, nest ggplot2:geom_sf, geom_point, geom_errorbar"
  },
  {
    "objectID": "Project_1.html#question",
    "href": "Project_1.html#question",
    "title": "Project_1",
    "section": "",
    "text": "Based on the U.S. BUREAU OF LABOR STATISTICS (“CPS Tables : U.s. Bureau of Labor Statistics” n.d.): Which race and sex group earn the most of money every week? What’s the trend of the earning over the last 10 years?"
  },
  {
    "objectID": "Project_1.html#audience",
    "href": "Project_1.html#audience",
    "title": "Project_1",
    "section": "Audience",
    "text": "Audience\nPeople who are interested in the labor force and weekly median earnings by race/gender/age group over time in America.(“Technical Documentation (CPS) : U.s. Bureau of Labor Statistics” n.d.)"
  },
  {
    "objectID": "Project_1.html#original-data",
    "href": "Project_1.html#original-data",
    "title": "Project_1",
    "section": "Original data",
    "text": "Original data\nData comes from TidyTuesday, which is a weekly podcast and global community activity brought to you by the R4DS Online Learning Community. Archive of datasets from the 2021 series of TidyTuesday events\nData Source for this project\n\nlibrary(\"tidytuesdayR\")\nlibrary(\"here\")\nlibrary(\"tidyverse\")\n\nIn this project, one datasets comes from TidyTuesday would be used. Specifically, we will use the following data from February 23th 2021. To access the data, you need to install the tidytuesdayR R package and use the function tt_load() with the date of ‘2021-02-23’ to load the data.\n\n# tests if a directory named \"data\" exists locally\nif (!dir.exists(here(\"data\"))) {\n    dir.create(here(\"data\"))\n}\n\nif (!file.exists(here(\"data\", \"tuesdata_earn.RDS\"))) {\n    tuesdata &lt;- tidytuesdayR::tt_load(\"2021-02-23\")\n    earn &lt;- tuesdata$earn\n    employed &lt;- tuesdata$employed\n    # save the files to RDS objects\n    saveRDS(tuesdata$earn, file = here(\"data\", \"tuesdata_earn.RDS\"))\n    saveRDS(tuesdata$employed, file = here(\"data\", \"tuesdata_employed.RDS\"))\n}\n\nearn &lt;- readRDS(here(\"data\", \"tuesdata_earn.RDS\"))"
  },
  {
    "objectID": "Project_1.html#data-dictionary",
    "href": "Project_1.html#data-dictionary",
    "title": "Project_1",
    "section": "data dictionary",
    "text": "data dictionary\nHere is a data dictionary for what all the column names mean: data dictionary"
  },
  {
    "objectID": "Project_1.html#data-wrangling",
    "href": "Project_1.html#data-wrangling",
    "title": "Project_1",
    "section": "data wrangling",
    "text": "data wrangling\n\n\n\n\n\n\nNote\n\n\n\nNote that this data weangling used 5 functions from dplyr, including: select, mutate,filter,summarise,arrange\n\n\n\nglimpse(earn)\n\nRows: 4,224\nColumns: 8\n$ sex                &lt;chr&gt; \"Both Sexes\", \"Both Sexes\", \"Both Sexes\", \"Both Sex…\n$ race               &lt;chr&gt; \"All Races\", \"All Races\", \"All Races\", \"All Races\",…\n$ ethnic_origin      &lt;chr&gt; \"All Origins\", \"All Origins\", \"All Origins\", \"All O…\n$ age                &lt;chr&gt; \"16 years and over\", \"16 years and over\", \"16 years…\n$ year               &lt;dbl&gt; 2010, 2010, 2010, 2010, 2011, 2011, 2011, 2011, 201…\n$ quarter            &lt;dbl&gt; 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, …\n$ n_persons          &lt;dbl&gt; 96821000, 99798000, 101385000, 100120000, 98329000,…\n$ median_weekly_earn &lt;dbl&gt; 754, 740, 740, 752, 755, 753, 753, 764, 769, 771, 7…\n\nearn_clean &lt;- earn %&gt;%\n      select(sex, race, age, year, median_weekly_earn) %&gt;%\n      mutate(\n            age_group = case_when(  age == \"16 to 24 years\" ~ 1 ,\n                                    age == \"25 to 54 years\" ~ 2 ,\n                                    age == \"55 years and over\" ~ 3 ,\n                                    ),\n            sex_group = factor(sex, levels = c(\"Both Sexes\", \"Men\", \"Women\") , labels = c(0, 1, 2))\n      )  %&gt;%\n      filter(age_group == 2 ) %&gt;%\n      mutate(Race_group = factor(race, levels = c(\"All Races\", \"Asian\", \"Black or African American\",\"White\") , labels = c(0, 1, 2, 3) ))\n\nadults_earn_race &lt;- earn_clean %&gt;%\n      group_by( race, year) %&gt;% \n      summarise(\n            year_earn = sum(median_weekly_earn)\n      )  %&gt;%\n      arrange(year, .by_group = TRUE)\n\nadults_earn_sex &lt;- earn_clean %&gt;%\n      group_by( sex_group, year) %&gt;% \n      summarise(\n            year_earn = sum(median_weekly_earn)\n      ) %&gt;%\n      arrange(desc(year), .by_group = TRUE)\n\n\n\n\n\n\n\nthree plots\n\n\n\nThere are three plots to show the median weekly earning over time, stratified by race and sex.\n\n\n\nadults_earn_race %&gt;%\n      ggplot( aes(year, year_earn, color = race))  +\n      geom_smooth(stat = \"smooth\", position = \"identity\", method = \"lm\") +\n      labs(\n            title = \"Median weekly earning by race over time\",\n            subtitle = \"Increasing trend of weekly earning from 2010 to 2020\",\n            caption = \"Siyu Zou\",\n            y = \"Median weekly earning (Current dollars)\",\n            x = \"Time (Year)\"\n      ) +\n      scale_x_continuous(breaks = seq(2010, 2020, 1), labels = seq(2010, 2020, 1) ) +\n      theme_minimal() +\n      theme(\n          plot.title = element_text(hjust = 0.5, face = \"bold\", size = 15),\n          plot.subtitle = element_text(hjust = 0.5, color = \"darkblue\", face = \"italic\", size = 13),\n          axis.title = element_text(color = \"black\", size = 12),\n          axis.text = element_text(color = \"black\", size = 11)\n      )\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\nadults_earn_sex %&gt;%\n      ggplot( aes(year, year_earn, color = sex_group))  +\n      geom_boxplot(stat = \"boxplot\", position = \"dodge2\" ) +\n      labs(\n            title = \"Median weekly earning by sex over time\",\n            subtitle = \"Increasing trend of weekly earning from 2010 to 2020\",\n            caption = \"Siyu Zou\",\n            y = \"Median weekly earning (Current dollars)\",\n            x = \"Time (Year)\"\n      ) +\n      scale_x_continuous(breaks = seq(2010, 2020, 1), labels = seq(2010, 2020, 1) ) +\n      theme_minimal() +\n      theme(\n          plot.title = element_text(hjust = 0.5, face = \"bold\", size = 15),\n          plot.subtitle = element_text(hjust = 0.5, color = \"darkblue\", face = \"italic\", size = 13),\n          axis.title = element_text(color = \"black\", size = 12),\n          axis.text = element_text(color = \"black\", size = 11)\n      )\n\n\n\n\nMale vs female, colored by sex\n\n\n\n\n\nearn_clean %&gt;%\n      ggplot(aes(year, median_weekly_earn, color = sex_group)) +\n      geom_point( ) +\n      geom_smooth(method = 'loess') +\n      facet_grid( sex ~ race , scales = \"free\") +\n      labs(\n            title = \"Median weekly earning over time\",\n            subtitle = \"Increasing trend, stratified by race and sex\",\n            x = \"Time(year)\",\n            y = \"Median weekly earning (Current dollars)\",\n            caption = \"Siyu Zou\"\n      ) +\n      scale_x_continuous(breaks = seq(2010, 2020, 3), labels = seq(2010, 2020, 3) ) +\n      theme_minimal() +\n      theme(\n            strip.text = element_text(color = \"#1380A1\" , size = 8),  \n            strip.background = element_rect(fill = \"white\", color = \"white\", linewidth = 1  ),\n            plot.title = element_text(hjust = 0.5, color = \"black\", face = \"bold\", size = 15) , \n            plot.subtitle = element_text(hjust = 0.5, color = \"black\", face = \"italic\", size = 13) ,  \n            plot.background = element_rect(fill = \"white\" ),\n    \n            # panel.grid.major = element_line(color = \"white\", linewidth = 0.5), \n            # panel.grid.minor = element_line(color = \"white\"),\n    \n            axis.title = element_text(color = \"black\",size = 12),\n            axis.text = element_text(color = \"black\", size = 9)\n      )\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\nInclude one image or table (not one you created yourself, but one you have saved locally or one from the web)\n\n\n\n\n\n\nA image from the U.S. Bureau of Labor Statistics (BLS)\n\n\n\nProvided an overview of Blacks in the labor force from 1976 to projected 2016-26. Aging labor force, lower participation rates (Toossi n.d.)\n\n\n\nThe Black share of the labor force by age group continues to shift. The labor force share of Blacks ages 55 and older was larger in 2016, and is projected to be larger in 2026, than that of the 16- to 24-year-old group."
  },
  {
    "objectID": "Project_1.html#summarize",
    "href": "Project_1.html#summarize",
    "title": "Project_1",
    "section": "Summarize",
    "text": "Summarize\nWhich race and sex group earn the most of money every week? Based on the U.S. Bureau of Labor Statistics (BLS) projects, in the past 10 years, all race groups’ weekly earning were increasing.  Specially, Asian had the highest median weekly earning from 2010 to 2020. Black or African American had the lowest median weekly earning from 2010 to 2020. Compared to women, men had higher median weekly earning. In total, Asian men had the highest median weekly earning, Black or African American women had the lowest median weekly earning over the 10 years."
  },
  {
    "objectID": "Project_1.html#list-out-functions",
    "href": "Project_1.html#list-out-functions",
    "title": "Project_1",
    "section": "list out functions",
    "text": "list out functions\ndplyr: mutate, select, filter, summarise, arrange  ggplot2: geom_smooth, geom_boxplot, geom_point"
  },
  {
    "objectID": "Project_1.html#research-question",
    "href": "Project_1.html#research-question",
    "title": "Example Analysis",
    "section": "",
    "text": "Based on the US Census Bureau’s data retrieved from APIs, - Estimate the death rate per 1000 residents in US 2021 - The household income distribution by different country in US\n\n\n\nData was downloaded by using tidycensus, an R package that allows users to interface with a select number of the US Census Bureau’s data APIs and return tidyverse-ready data frames.\n\n\n\n\n\nHere is a data dictionary for what all the column names mean:   data dictionary\n\n\n\n\n# tests if a directory named \"data\" exists locally\nif (!dir.exists(here(\"data\"))) {\n    dir.create(here(\"data\"))\n}\n\nif (!file.exists(here(\"data\", \"US_death.RDS\"))) {\n      US_death &lt;- get_estimates(geography = \"county\",\n                               variables = \"DEATHS\",\n                               year = 2021,\n                               geometry = TRUE,\n                               resolution = \"20m\") %&gt;%\n            shift_geometry()\n      # save the files to RDS objects\n      saveRDS(US_death, file = here(\"data\", \"US_death.RDS\"))\n      }\n\nif (!file.exists(here(\"data\", \"US_income.RDS\"))) {\n      US_income &lt;- get_acs(geography = \"county\", variables = \"B19013_001\", \n                            shift_geo = TRUE, geometry = TRUE)\n      saveRDS(US_income, file = here(\"data\", \"US_income.RDS\"))\n      }\n\nvars10 &lt;- c(\"P005003\", \"P005004\", \"P005006\", \"P004003\")\n\nif (!file.exists(here(\"data\", \"ethnic_il.RDS\"))) {\n     ethnic_il &lt;- get_decennial(geography = \"county\",  year = 2010,\n                    summary_var = \"P001001\", variables = vars10,  geometry = T)\n      saveRDS(ethnic_il, file = here(\"data\", \"ethnic_il.RDS\"))\n      }\n\n\n\n\n\n\nUS_death &lt;- readRDS(here(\"data\", \"US_death.RDS\"))\nUS_income &lt;- readRDS(here(\"data\", \"US_income.RDS\"))\nethnic_il &lt;- readRDS(here(\"data\", \"ethnic_il.RDS\"))\n\nsum_il &lt;- ethnic_il  |&gt;\n  separate(NAME, c(\"country\", \"state\"), sep = \",\") |&gt;\n  group_by(state, country) |&gt;\n  nest() |&gt;\n  mutate(\n    data = map(data, ~ {\n      .x$value &lt;- as.numeric(.x$value)\n      .x$summary_value &lt;- as.numeric(.x$summary_value)\n      .x$pct &lt;- 100 * (.x$value / .x$summary_value)\n      return(.x)\n    })\n  ) |&gt;\n  unnest(cols = c(data))\n\nsum_US_death &lt;- US_death |&gt;\n      separate(NAME, c(\"country\", \"state\"), sep = \",\" )  |&gt;\n      group_by(state) |&gt;\n      nest() |&gt;\n      mutate(\n         stats = map(.x = data, .f = ~tibble(\n            death_minimum = min(.x$value),\n            death_maximum = max(.x$value),\n            death_mean = mean(.x$value)\n        ))\n    )     |&gt;\n      select(-data)  |&gt;\n      unnest(stats)\n\n\n\n\norder = c(\"Q1:&lt;157\", \"Q2:157 to 361\", \"Q3:361 to 865\", \"Q4:865 and up\")\n\nUS_death &lt;- US_death %&gt;%\n  mutate(groups = case_when(\n    value &gt; 865 ~ \"Q4:865 and up\",\n    value &gt; 361 ~ \"Q3:361 to 865\",\n    value &gt; 157 ~ \"Q2:157 to 361\",\n    TRUE ~ \"Q1:&lt;157\"\n  )) %&gt;%\n  mutate(groups = factor(groups, levels = order))\n\nstate_overlay &lt;- states(\n  cb = TRUE,\n  resolution = \"20m\"\n) %&gt;%\n  filter(GEOID != \"72\") %&gt;%\n  shift_geometry()\n\nRetrieving data for the year 2021\n\n\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |======                                                                |   9%\n  |                                                                            \n  |============                                                          |  17%\n  |                                                                            \n  |==================                                                    |  26%\n  |                                                                            \n  |========================                                              |  35%\n  |                                                                            \n  |===============================                                       |  44%\n  |                                                                            \n  |=====================================                                 |  52%\n  |                                                                            \n  |===========================================                           |  61%\n  |                                                                            \n  |=================================================                     |  70%\n  |                                                                            \n  |=======================================================               |  79%\n  |                                                                            \n  |=============================================================         |  87%\n  |                                                                            \n  |======================================================================| 100%\n\nggplot() +\n  geom_sf(data = US_death, aes(fill = groups, color = groups), size = 0.1) +\n  geom_sf(data = state_overlay, fill = NA, color = \"black\", size = 0.1) +\n  scale_fill_brewer(palette = \"PuOr\", direction = -1) +\n  scale_color_brewer(palette = \"PuOr\", direction = -1, guide = FALSE) +\n  coord_sf(datum = NA) +\n  theme_minimal(base_family = \"Roboto\") +\n  labs(title = \"Death per 1000 residents by county\",\n       subtitle = \"US Census Bureau 2021 Population Estimates\",\n       fill = \"Rate\",\n       caption = \"Data acquired with the R tidycensus package | @Siyu Zou\")\n\n\n\n\n\n\n\nggplot(US_income) + \n  geom_sf(aes(fill = estimate), color = NA) + \n  coord_sf(datum = NA) + \n  theme_minimal() + \n  scale_fill_viridis_c() +\n       labs(title = \"Household income by county\",\n       subtitle = \"US Census Bureau 2021 Population Estimates\",\n       fill = \"Household income\",\n       caption = \"Data acquired with the R tidycensus package | @Siyu Zou\")\n\n\n\n\n\n\n\n\nsum_il %&gt;%\n      filter( value &gt; 1000 ) %&gt;%\n      mutate(race = case_when (variable == \"P005003\" ~ \"White\",\n                               variable == \"P005004\" ~ \"Black\",\n                               variable == \"P005006\" ~ \"Asian\",\n                               variable == \"P004003\" ~ \"Hispanic\")\n             ) %&gt;%\n      ggplot(aes(pct)) + \n            geom_histogram() +\n            facet_wrap(~race) +\n            labs(title = \"Mean death number by race in 2017-2021\",\n                  subtitle = \"2017-2021 American Community Survey\",\n                  y = \"Mean number of death\",\n                  x = \"Race\",\n                  caption = \"Siyu Zou\") +\n      theme_minimal() +\n      theme(\n            axis.text.x = element_text(angle = 45, hjust = 1, size = 6),\n            plot.title = element_text(size = 16, face = \"bold\",hjust = 0.5),\n            plot.subtitle = element_text(size = 11, face = \"italic\" ,hjust = 0.5)      \n      )\n\n\n\n\n\n\n\n\n\ndplyr:mutate, filter, group_by, select tidyr: separate, nest ggplot2:geom_sf, geom_point, geom_errorbar"
  },
  {
    "objectID": "Project_1.html#research-question-1",
    "href": "Project_1.html#research-question-1",
    "title": "Example Analysis",
    "section": "2. Research Question",
    "text": "2. Research Question\nBased on the U.S. BUREAU OF LABOR STATISTICS (“CPS Tables : U.s. Bureau of Labor Statistics” n.d.): Which race and sex group earn the most of money every week? What’s the trend of the earning over the last 10 years?\n\nAudience\nPeople who are interested in the labor force and weekly median earnings by race/gender/age group over time in America.(“Technical Documentation (CPS) : U.s. Bureau of Labor Statistics” n.d.)\n\n\nOriginal data\nData comes from TidyTuesday, which is a weekly podcast and global community activity brought to you by the R4DS Online Learning Community. Archive of datasets from the 2021 series of TidyTuesday events\nData Source for this project\n\nlibrary(\"tidytuesdayR\")\nlibrary(\"here\")\nlibrary(\"tidyverse\")\n\nIn this project, one datasets comes from TidyTuesday would be used. Specifically, we will use the following data from February 23th 2021. To access the data, you need to install the tidytuesdayR R package and use the function tt_load() with the date of ‘2021-02-23’ to load the data.\n\n# tests if a directory named \"data\" exists locally\nif (!dir.exists(here(\"data\"))) {\n    dir.create(here(\"data\"))\n}\n\nif (!file.exists(here(\"data\", \"tuesdata_earn.RDS\"))) {\n    tuesdata &lt;- tidytuesdayR::tt_load(\"2021-02-23\")\n    earn &lt;- tuesdata$earn\n    employed &lt;- tuesdata$employed\n    # save the files to RDS objects\n    saveRDS(tuesdata$earn, file = here(\"data\", \"tuesdata_earn.RDS\"))\n    saveRDS(tuesdata$employed, file = here(\"data\", \"tuesdata_employed.RDS\"))\n}\n\nearn &lt;- readRDS(here(\"data\", \"tuesdata_earn.RDS\"))\n\n\n\ndata dictionary\nHere is a data dictionary for what all the column names mean: data dictionary\n\n\ndata wrangling\n\n\n\n\n\n\nNote\n\n\n\nNote that this data weangling used 5 functions from dplyr, including: select, mutate,filter,summarise,arrange\n\n\n\nglimpse(earn)\n\nRows: 4,224\nColumns: 8\n$ sex                &lt;chr&gt; \"Both Sexes\", \"Both Sexes\", \"Both Sexes\", \"Both Sex…\n$ race               &lt;chr&gt; \"All Races\", \"All Races\", \"All Races\", \"All Races\",…\n$ ethnic_origin      &lt;chr&gt; \"All Origins\", \"All Origins\", \"All Origins\", \"All O…\n$ age                &lt;chr&gt; \"16 years and over\", \"16 years and over\", \"16 years…\n$ year               &lt;dbl&gt; 2010, 2010, 2010, 2010, 2011, 2011, 2011, 2011, 201…\n$ quarter            &lt;dbl&gt; 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, …\n$ n_persons          &lt;dbl&gt; 96821000, 99798000, 101385000, 100120000, 98329000,…\n$ median_weekly_earn &lt;dbl&gt; 754, 740, 740, 752, 755, 753, 753, 764, 769, 771, 7…\n\nearn_clean &lt;- earn %&gt;%\n      select(sex, race, age, year, median_weekly_earn) %&gt;%\n      mutate(\n            age_group = case_when(  age == \"16 to 24 years\" ~ 1 ,\n                                    age == \"25 to 54 years\" ~ 2 ,\n                                    age == \"55 years and over\" ~ 3 ,\n                                    ),\n            sex_group = factor(sex, levels = c(\"Both Sexes\", \"Men\", \"Women\") , labels = c(0, 1, 2))\n      )  %&gt;%\n      filter(age_group == 2 ) %&gt;%\n      mutate(Race_group = factor(race, levels = c(\"All Races\", \"Asian\", \"Black or African American\",\"White\") , labels = c(0, 1, 2, 3) ))\n\nadults_earn_race &lt;- earn_clean %&gt;%\n      group_by( race, year) %&gt;% \n      summarise(\n            year_earn = sum(median_weekly_earn)\n      )  %&gt;%\n      arrange(year, .by_group = TRUE)\n\nadults_earn_sex &lt;- earn_clean %&gt;%\n      group_by( sex_group, year) %&gt;% \n      summarise(\n            year_earn = sum(median_weekly_earn)\n      ) %&gt;%\n      arrange(desc(year), .by_group = TRUE)\n\n\n\n\n\n\n\nthree plots\n\n\n\nThere are three plots to show the median weekly earning over time, stratified by race and sex.\n\n\n\nadults_earn_race %&gt;%\n      ggplot( aes(year, year_earn, color = race))  +\n      geom_smooth(stat = \"smooth\", position = \"identity\", method = \"lm\") +\n      labs(\n            title = \"Median weekly earning by race over time\",\n            subtitle = \"Increasing trend of weekly earning from 2010 to 2020\",\n            caption = \"Siyu Zou\",\n            y = \"Median weekly earning (Current dollars)\",\n            x = \"Time (Year)\"\n      ) +\n      scale_x_continuous(breaks = seq(2010, 2020, 1), labels = seq(2010, 2020, 1) ) +\n      theme_minimal() +\n      theme(\n          plot.title = element_text(hjust = 0.5, face = \"bold\", size = 15),\n          plot.subtitle = element_text(hjust = 0.5, color = \"darkblue\", face = \"italic\", size = 13),\n          axis.title = element_text(color = \"black\", size = 12),\n          axis.text = element_text(color = \"black\", size = 11)\n      )\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\nadults_earn_sex %&gt;%\n      ggplot( aes(year, year_earn, color = sex_group))  +\n      geom_boxplot(stat = \"boxplot\", position = \"dodge2\" ) +\n      labs(\n            title = \"Median weekly earning by sex over time\",\n            subtitle = \"Increasing trend of weekly earning from 2010 to 2020\",\n            caption = \"Siyu Zou\",\n            y = \"Median weekly earning (Current dollars)\",\n            x = \"Time (Year)\"\n      ) +\n      scale_x_continuous(breaks = seq(2010, 2020, 1), labels = seq(2010, 2020, 1) ) +\n      theme_minimal() +\n      theme(\n          plot.title = element_text(hjust = 0.5, face = \"bold\", size = 15),\n          plot.subtitle = element_text(hjust = 0.5, color = \"darkblue\", face = \"italic\", size = 13),\n          axis.title = element_text(color = \"black\", size = 12),\n          axis.text = element_text(color = \"black\", size = 11)\n      )\n\n\n\n\nMale vs female, colored by sex\n\n\n\n\n\nearn_clean %&gt;%\n      ggplot(aes(year, median_weekly_earn, color = sex_group)) +\n      geom_point( ) +\n      geom_smooth(method = 'loess') +\n      facet_grid( sex ~ race , scales = \"free\") +\n      labs(\n            title = \"Median weekly earning over time\",\n            subtitle = \"Increasing trend, stratified by race and sex\",\n            x = \"Time(year)\",\n            y = \"Median weekly earning (Current dollars)\",\n            caption = \"Siyu Zou\"\n      ) +\n      scale_x_continuous(breaks = seq(2010, 2020, 3), labels = seq(2010, 2020, 3) ) +\n      theme_minimal() +\n      theme(\n            strip.text = element_text(color = \"#1380A1\" , size = 8),  \n            strip.background = element_rect(fill = \"white\", color = \"white\", linewidth = 1  ),\n            plot.title = element_text(hjust = 0.5, color = \"black\", face = \"bold\", size = 15) , \n            plot.subtitle = element_text(hjust = 0.5, color = \"black\", face = \"italic\", size = 13) ,  \n            plot.background = element_rect(fill = \"white\" ),\n    \n            # panel.grid.major = element_line(color = \"white\", linewidth = 0.5), \n            # panel.grid.minor = element_line(color = \"white\"),\n    \n            axis.title = element_text(color = \"black\",size = 12),\n            axis.text = element_text(color = \"black\", size = 9)\n      )\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\nInclude one image or table\n(not one created by myself, but one I have saved locally or one from the web)\n\n\n\n\n\n\nA image from the U.S. Bureau of Labor Statistics (BLS)\n\n\n\nProvided an overview of Blacks in the labor force from 1976 to projected 2016-26. Aging labor force, lower participation rates (Toossi n.d.)\n\n\n\nThe Black share of the labor force by age group continues to shift. The labor force share of Blacks ages 55 and older was larger in 2016, and is projected to be larger in 2026, than that of the 16- to 24-year-old group.\n\n\n\nSummarize\nWhich race and sex group earn the most of money every week? Based on the U.S. Bureau of Labor Statistics (BLS) projects, in the past 10 years, all race groups’ weekly earning were increasing.  Specially, Asian had the highest median weekly earning from 2010 to 2020. Black or African American had the lowest median weekly earning from 2010 to 2020. Compared to women, men had higher median weekly earning. In total, Asian men had the highest median weekly earning, Black or African American women had the lowest median weekly earning over the 10 years.\n\n\nlist out functions\ndplyr: mutate, select, filter, summarise, arrange  ggplot2: geom_smooth, geom_boxplot, geom_point"
  }
]